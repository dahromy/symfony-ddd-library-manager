# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Domain/'
            - '../src/Kernel.php'

    # Explicitly configure Application layer
    App\Application\:
        resource: '../src/Application/'
        autowire: true
        autoconfigure: true

    # Explicitly configure Infrastructure layer
    App\Infrastructure\:
        resource: '../src/Infrastructure/'
        autowire: true
        autoconfigure: true

    # Configure fixtures
    App\Infrastructure\Persistence\Doctrine\Fixtures\:
        resource: '../src/Infrastructure/Persistence/Doctrine/Fixtures/'
        tags: ['doctrine.fixture.orm']

    # Configure concrete repository implementations
    App\Domain\Repository\AuthorRepositoryInterface:
        class: App\Infrastructure\Persistence\Doctrine\AuthorRepository

    App\Domain\Repository\BookRepositoryInterface:
        class: App\Infrastructure\Persistence\Doctrine\BookRepository

    App\Domain\Repository\BorrowRecordRepositoryInterface:
        class: App\Infrastructure\Persistence\Doctrine\BorrowRecordRepository

    App\Domain\Repository\UserRepositoryInterface:
        class: App\Infrastructure\Persistence\Doctrine\UserRepository

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
